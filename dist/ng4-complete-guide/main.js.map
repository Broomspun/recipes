{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+yBAA+yB,mBAAmB,2DAA2D,mBAAmB,gV;;;;;;;;;;;ACAh5B,gDAAgD,+BAA+B,EAAE,mCAAmC,mBAAmB,mBAAmB,kCAAkC,iCAAiC,8BAA8B,4BAA4B,sBAAsB,EAAE,mCAAmC,mBAAmB,qBAAqB,kCAAkC,iCAAiC,8BAA8B,4BAA4B,sBAAsB,EAAE,G;;;;;;;;;;;;;;;;;;;;;ACAre;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AAa/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACjBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"wrap\\\" id=\\\"bigbuysync-plugin-options\\\">\\n  <h1>BigBuy Sync Setting</h1>\\n\\n  <form action=\\\"options.php\\\" method=\\\"post\\\">\\n    <h2 class=\\\"title\\\">API Token</h2>\\n\\n    <table class=\\\"form-table\\\">\\n      <tr valign=\\\"top\\\">\\n        <th scope=\\\"row\\\">BigBuy API Token</th>\\n        <td><input type=\\\"text\\\" class=\\\"regular-text\\\" name=\\\"bigbuy_api_token\\\"\\n                   value=\\\"2143248371895734\\\"/></td>\\n      </tr>\\n      <tr valign=\\\"top\\\">\\n        <td colspan=\\\"2\\\">\\n          <hr>\\n        </td>\\n      </tr>\\n      <tr valign=\\\"top\\\">\\n        <td colspan=\\\"2\\\"><h2 class=\\\"title\\\">Sync Options</h2></td>\\n      </tr>\\n\\n      <tr valign=\\\"top\\\">\\n        <th scope=\\\"row\\\" style=\\\"padding-top:5px;padding-bottom:5px;\\\">Sync Products</th>\\n        <td style=\\\"padding-top:5px;padding-bottom:5px;\\\">\\n          <input type=\\\"hidden\\\" name=\\\"bigbuy_sync_products\\\" value=\\\"0\\\"/>\\n          <input name=\\\"bigbuy_sync_products\\\" id=\\\"bigbuy_sync_products\\\"\\n                 value=\\\"1\\\"\\n          type=\\\"checkbox\\\"> sync bigbuy products data\\n        </td>\\n      </tr>\\n\\n    </table>\\n\\n  </form>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"#bigbuysync-plugin-options * {\\n  text-transform: capitalize; }\\n\\n#bigbuysync-plugin-options h1 {\\n  display: block;\\n  font-size: 2em;\\n  -webkit-margin-before: 0.67em;\\n  -webkit-margin-after: 0.67em;\\n  -webkit-margin-start: 0px;\\n  -webkit-margin-end: 0px;\\n  font-weight: bold; }\\n\\n#bigbuysync-plugin-options h2 {\\n  display: block;\\n  font-size: 1.5em;\\n  -webkit-margin-before: 0.83em;\\n  -webkit-margin-after: 0.83em;\\n  -webkit-margin-start: 0px;\\n  -webkit-margin-end: 0px;\\n  font-weight: bold; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}